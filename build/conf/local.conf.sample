# Where to cache the files Poky downloads
DL_DIR ?= "${OEROOT}/sources"
BBFILES = "${OEROOT}/meta/packages/*/*.bb"

# To enable extra packages, uncomment the following lines:
# BBFILES := "${OEROOT}/meta/packages/*/*.bb ${OEROOT}/meta-extras/packages/*/*.bb"
# BBFILE_COLLECTIONS = "normal extras"
# BBFILE_PATTERN_normal = "^${OEROOT}/meta/"
# BBFILE_PATTERN_extras = "^${OEROOT}/meta/"
# BBFILE_PRIORITY_normal = "5"
# BBFILE_PRIORITY_extras = "5"

BBMASK = ""

# The machine to target
MACHINE ?= "qemuarm"

# Other supported machines
#MACHINE ?= "cmx270"
#MACHINE ?= "qemux86"
#MACHINE ?= "c7x0"
#MACHINE ?= "akita"
#MACHINE ?= "spitz"
#MACHINE ?= "nokia770"

DISTRO = "poky"

# DISTRO_TYPE determines the type of images that will be built
# "release" - create a streamlined and secure image
# "debug"   - enable easier ssh access 
#           - include the devtools and testapps packages

DISTRO_TYPE = "debug"

# A list of packaging systems used in generated images
# The first package type listed will be used for rootfs generation
# include 'package_deb' for debs
# include 'package_ipk' for ipks
#PACKAGE_CLASSES ?= "package_deb package_ipk"
PACKAGE_CLASSES ?= "package_ipk"

# Uncomment this to specify where BitBake should create its temporary files.
# Note that a full build of everything in OpenEmbedded will take GigaBytes of hard
# disk space, so make sure to free enough space. The default TMPDIR is
# <build directory>/tmp
TMPDIR = "${OEROOT}/build/tmp"

# Uncomment and set to allow bitbake to execute multiple tasks at once.
# Note, This option is currently experimental - YMMV.
# 'quilt' is also required on the host system 
# BB_NUMBER_THREADS = "1"

# Comment this out if you are *not* using provided qemu deb - see README
ASSUME_PROVIDED += "qemu-native"

# Uncomment these two if you want BitBake to build images useful for debugging.
# DEBUG_BUILD = "1"
# INHIBIT_PACKAGE_STRIP = "1"

# Uncomment these to build a package such that you can use gprof to profile it.
# NOTE: This will only work with 'linux' targets, not
# 'linux-uclibc', as uClibc doesn't provide the necessary
# object files.  Also, don't build glibc itself with these
# flags, or it'll fail to build.
#
# PROFILE_OPTIMIZATION = "-pg"
# SELECTED_OPTIMIZATION = "${PROFILE_OPTIMIZATION}"
# LDFLAGS =+ "-pg"

# Uncomment this if you want BitBake to emit debugging output
# BBDEBUG = "yes"
# Uncomment this if you want BitBake to emit the log if a build fails.
BBINCLUDELOGS = "yes"

# Specifies a location to search for pre-generated tarballs when fetching
# a cvs:// URI.  Uncomment this, if you not want to pull directly from CVS.
CVS_TARBALL_STASH = "http://www.oesources.org/source/current/"

ENABLE_BINARY_LOCALE_GENERATION = "1"
